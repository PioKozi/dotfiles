#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# autostarts
flameshot &
dunst &
xbanish &
redshift &
batsignal -w 20 -c 10 -f 100 -W 'BATTERY LOW' -C 'BATTERY CRITICAL' -F 'BATTERY FULL' -a 'battery' -b
sxhkd &
thunar --daemon &
picom -C --config $HOME/.config/picom/picom.conf -b
$HOME/.scripts/reminder.sh &
feh --bg-scale ~/Pictures/wallpapers/gruvbox/garbage_math.png
# music player daemon
mpd
mpc update
mpc add /
# panel is started at the bottom

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4
TERMINAL=kitty

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-x close
hc keybind $Mod-Return spawn "${TERMINAL:-kitty}"
hc keybind $Mod-p spawn rofi -show drun -matching fuzzy
hc keybind $Mod-w spawn rofi -show window -matching fuzzy
hc keybind $Mod-Shift-p spawn dmenu_run
hc keybind $Mod-m spawn $HOME/.scripts/music.sh

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right
hc set focus_follows_mouse 1

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
hc rename default 1
hc add 2
hc add 3
hc add 4
hc add 5
hc add 6
hc add 7
hc add 8
hc add 9
hc add 10

hc keybind $Mod-1 use 1
hc keybind $Mod-2 use 2
hc keybind $Mod-3 use 3
hc keybind $Mod-4 use 4
hc keybind $Mod-5 use 5
hc keybind $Mod-6 use 6
hc keybind $Mod-7 use 7
hc keybind $Mod-8 use 8
hc keybind $Mod-9 use 9
hc keybind $Mod-0 use 10

hc keybind $Mod-Shift-1 move 1
hc keybind $Mod-Shift-2 move 2
hc keybind $Mod-Shift-3 move 3
hc keybind $Mod-Shift-4 move 4
hc keybind $Mod-Shift-5 move 5
hc keybind $Mod-Shift-6 move 6
hc keybind $Mod-Shift-7 move 7
hc keybind $Mod-Shift-8 move 8
hc keybind $Mod-Shift-9 move 9
hc keybind $Mod-Shift-0 move 10

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
# hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set frame_border_active_color '#978965'
hc set frame_border_normal_color '#565656'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#B9AEA9'
hc set frame_border_width 4
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width on
hc set frame_gap 0
hc set snap_gap 0

hc attr theme.active.color '#cc241d'
hc attr theme.normal.color '#978965'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#1d2021'
hc attr theme.active.outer_color '#1d2021'
hc attr theme.background_color '#1d2021' hc set window_gap 0 hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done

$HOME/.config/polybar/launch.sh &
